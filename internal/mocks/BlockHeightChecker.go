// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// BlockHeightChecker is an autogenerated mock type for the BlockHeightChecker type
type BlockHeightChecker struct {
	mock.Mock
}

// GetBlockHeight provides a mock function with given fields:
func (_m *BlockHeightChecker) GetBlockHeight() uint64 {
	ret := _m.Called()

	var r0 uint64
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	return r0
}

// GetError provides a mock function with given fields:
func (_m *BlockHeightChecker) GetError() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// IsPassing provides a mock function with given fields: maxBlockHeight
func (_m *BlockHeightChecker) IsPassing(maxBlockHeight uint64) bool {
	ret := _m.Called(maxBlockHeight)

	var r0 bool
	if rf, ok := ret.Get(0).(func(uint64) bool); ok {
		r0 = rf(maxBlockHeight)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// RunCheck provides a mock function with given fields:
func (_m *BlockHeightChecker) RunCheck() {
	_m.Called()
}

type mockConstructorTestingTNewBlockHeightChecker interface {
	mock.TestingT
	Cleanup(func())
}

// NewBlockHeightChecker creates a new instance of BlockHeightChecker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBlockHeightChecker(t mockConstructorTestingTNewBlockHeightChecker) *BlockHeightChecker {
	mock := &BlockHeightChecker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
