global:
  port: 8080

# List of supported chains.
# The HTTP endpoint for a given chain is <host>:<port>/<chainName>.
chains:
  - chainName: ethereum
    routing:
      # Number of blocks a node can be behind the max known height and
      # still get requests routed to it.
      maxBlocksBehind: 10

    # (Optional) List of upstream node groups.
    # If defined, all upstreams must define group membership via the `group` field.
    groups:
      # Each group must have the following keys
      #
      # id - Unique identifer for the group.
      # priority - Defines the routing priority for nodes in the group.
      #            The lower the number, the higher the priority.
      #            Priority routing works by identifying the highest priority group with at least
      #              one healthy upstream. For example, if the highest priority group doesn't have any healthy upstreams,
      #              the gateway will look at the group at the next priority level to see if it has any healthy upstreams. It will continue
      #              until it finds a group that has at least one healthy upstream. If there are multiple upstreams in that group, requests are
      #              spread across the upstreams in a round-robin fashion.
      - id: primary
        priority: 0
      - id: fallback
        priority: 1

    # List of upstream node RPCs.
    upstreams:
      # Each upstream can have the following keys:
      #
      # id - Unique identifier for the upstream.
      # httpURL - HTTP JSON RPC URL.
      # wsURL - Websocket URL.
      # basicAuth - Basic HTTP authentication username and password.
      # healthCheck - Health check-specific configuration.
      #   useWsForBlockHeight - Whether or not we subscribe to newHeads using
      #     websockets to detect the latest block height. This is preferred because
      #     it quickly updates the gateway with the latest block height. If this
      #     setting is undefined, the gateway will attempt to subscribe to new
      #     heads if the upstream supports it.
      # nodeType - full or archive
      - id: my-node
        httpURL: "http://12.57.207.168:8545"
        wsURL: "wss://12.57.207.168:8546"
        group: primary
        nodeType: full
      - id: infura-eth
        httpURL: "https://mainnet.infura.io/v3/${INFURA_API_KEY}"
        wsURL: "wss://mainnet.infura.io/ws/v3/${INFURA_API_KEY}"
        basicAuth:
          username: ~
          password: ${INFURA_API_KEY_SECRET}
        group: fallback
        nodeType: archive
      - id: alchemy-eth
        httpURL: "https://eth-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}"
        wsURL: "wss://eth-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}"
        healthCheck:
          useWsForBlockHeight: false
        group: fallback
        nodeType: full
